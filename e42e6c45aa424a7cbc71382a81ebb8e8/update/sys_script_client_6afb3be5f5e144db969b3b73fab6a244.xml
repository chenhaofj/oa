<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<record_update table="sys_script_client">
  <sys_script_client action="INSERT_OR_UPDATE">
    <active>true</active>
    <applies_extended>false</applies_extended>
    <condition/>
    <description/>
    <field>amount</field>
    <global>true</global>
    <isolate_script>false</isolate_script>
    <messages/>
    <name>金额转换为大写</name>
    <order>100</order>
    <script>var amount = g_form.getValue("amount");
g_form.setValue("amount_upper", convertCurrency(amount));

function convertCurrency(money) {
  //汉字的数字
  var cnNums = new Array('零', '壹', '贰', '叁', '肆', '伍', '陆', '柒', '捌', '玖');
  //基本单位
  var cnIntRadice = new Array('', '拾', '佰', '仟');
  //对应整数部分扩展单位
  var cnIntUnits = new Array('', '万', '亿', '兆');
  //对应小数部分单位
  var cnDecUnits = new Array('角', '分', '毫', '厘');
  //整数金额时后面跟的字符
  var cnInteger = '整';
  //整型完以后的单位
  var cnIntLast = '元';
  //最大处理的数字
  var maxNum = 999999999999999.9999;
  //金额整数部分
  var integerNum;
  //金额小数部分
  var decimalNum;
  //输出的中文金额字符串
  var chineseStr = '';
  //分离金额后用的数组，预定义
  var parts;
  if (money == '') {
    return '';
  }
  money = parseFloat(money);
  if (money &gt;= maxNum) {
    //超出最大处理数字
    return '';
  }
  if (money == 0) {
    chineseStr = cnNums[0] + cnIntLast + cnInteger;
    return chineseStr;
  }
  //转换为字符串
  money = money.toString();
  if (money.indexOf('.') == -1) {
    integerNum = money;
    decimalNum = '';
  } else {
    parts = money.split('.');
    integerNum = parts[0];
    decimalNum = parts[1].substr(0, 4);
  }
  //获取整型部分转换
  if (parseInt(integerNum, 10) &gt; 0) {
    var zeroCount = 0;
    var IntLen = integerNum.length;
    for (var i = 0; i &lt; IntLen; i++) {
      var n = integerNum.substr(i, 1);
      var p = IntLen - i - 1;
      var q = p / 4;
      var m = p % 4;
      if (n == '0') {
        zeroCount++;
      } else {
        if (zeroCount &gt; 0) {
          chineseStr += cnNums[0];
        }
        //归零
        zeroCount = 0;
        chineseStr += cnNums[parseInt(n)] + cnIntRadice[m];
      }
      if (m == 0 &amp;&amp; zeroCount &lt; 4) {
        chineseStr += cnIntUnits[q];
      }
    }
    chineseStr += cnIntLast;
  }
  //小数部分
  if (decimalNum != '') {
    var decLen = decimalNum.length;
    for (var i = 0; i &lt; decLen; i++) {
      var n = decimalNum.substr(i, 1);
      if (n != '0') {
        chineseStr += cnNums[Number(n)] + cnDecUnits[i];
      }
    }
  }
  if (chineseStr == '') {
    chineseStr += cnNums[0] + cnIntLast + cnInteger;
  } else if (decimalNum == '') {
    chineseStr += cnInteger;
  }
  return chineseStr;
}</script>
    <sys_class_name>sys_script_client</sys_class_name>
    <sys_created_by>admin</sys_created_by>
    <sys_created_on>2022-05-31 14:22:30</sys_created_on>
    <sys_domain>global</sys_domain>
    <sys_domain_path>/</sys_domain_path>
    <sys_effective>true</sys_effective>
    <sys_id>6afb3be5f5e144db969b3b73fab6a244</sys_id>
    <sys_mod_count>1</sys_mod_count>
    <sys_name/>
    <sys_overrides/>
    <sys_package/>
    <sys_policy/>
    <sys_scope>e42e6c45aa424a7cbc71382a81ebb8e8</sys_scope>
    <sys_update_name/>
    <sys_updated_by>admin</sys_updated_by>
    <sys_updated_on>2022-05-31 14:22:30</sys_updated_on>
    <table>x_yunji_oa__t_trip_cost_approve</table>
    <type>onLoad</type>
    <ui_type>0</ui_type>
    <view/>
  </sys_script_client>
</record_update>
